{"version":3,"sources":["styles/dialog-form.module.css","store/index.js","components/Dialogs.js","components/Chat.js","routes/index.js","utils/serviceWorker.js","index.js","constants/ActionTypes.js","reducers/counter.js","reducers/index.js","store/storeProd.js","styles/message-form.module.css"],"names":["module","exports","store","require","default","DialogContainer","props","className","styles","dialog_container","onClick","redirect","name","dialog_avatar","src","avatar_img","dialog_name","dialog_message","message","dialog_date","date","check","dialog_check","Dialogs","useState","chats","setChats","toggleAdd","setAdd","useEffect","data","localStorage","getItem","setItem","JSON","stringify","list","parse","map","element","pop","undefined","push","key","length","dialog_form","dialog_header","header_text","chat_list","add_button","value","setValue","onSubmit","event","preventDefault","HandleSubmit","trim","add_input","type","onChange","target","HandleChange","Chat","messages","setMessages","myRef","useRef","current","scrollIntoView","block","message_container","wrapper","chat_header","chat_exit_button","chat_name","messages_list","ref","current_message","setCurrentMessage","input","focus","Date","minutes","getMinutes","toString","hours","getHours","sendMessage","handleChange","message_input","Container","styled","div","history","createBrowserHistory","Routes","enterChat","component","setComponent","exitChat","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","INCREMENT_COUNTER","DECREMENT_COUNTER","initialState","rootReducer","combineReducers","counter","state","ActionTypes","middlewares","ReduxThunk","enhancer","applyMiddleware","configureStore","createStore"],"mappings":"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","file":"static/js/main.2d6c5335.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_header\":\"dialog-form_dialog_header__3VDhw\",\"header_text\":\"dialog-form_header_text__1YTWw\",\"chat_list\":\"dialog-form_chat_list__23Okk\",\"add_button\":\"dialog-form_add_button__1ROua\",\"avatar_img\":\"dialog-form_avatar_img__2bhY2\",\"add_input\":\"dialog-form_add_input__1A4xZ\",\"dialog_container\":\"dialog-form_dialog_container__39IIc\",\"dialog_avatar\":\"dialog-form_dialog_avatar__1gkpO\",\"dialog_name\":\"dialog-form_dialog_name__2iec2\",\"dialog_message\":\"dialog-form_dialog_message__2oML4\",\"dialog_date\":\"dialog-form_dialog_date__Nn60S\",\"dialog_check\":\"dialog-form_dialog_check__1ubGd\"};","const { default: store } =\n\tprocess.env.NODE_ENV === 'production'\n\t\t? require('./storeProd')\n\t\t: require('./storeDev');\n\n// Exporting the store, then use it anywhere like store.getState() or store.dispatch()\nmodule.exports = store();\n","import React, { useState, useEffect } from 'react';\nimport styles from '../styles/dialog-form.module.css';\n\nfunction Dialogs(props) {\n\tconst [chats, setChats] = useState([]);\n\tconst [toggleAdd, setAdd] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst data = localStorage.getItem('users');\n\t\tif (data === null) {\n\t\t\tlocalStorage.setItem('users', JSON.stringify([]));\n\t\t} else {\n\t\t\tlet list = [];\n\t\t\tJSON.parse(data).map((element) => {\n\t\t\t\tlet data = JSON.parse(localStorage.getItem(element)).pop();\n\t\t\t\tlet message = '';\n\t\t\t\tlet date = '';\n\t\t\t\tlet check = false;\n\t\t\t\tif (data !== undefined) {\n\t\t\t\t\tmessage = data[0];\n\t\t\t\t\tdate = data[1];\n\t\t\t\t\tcheck = true;\n\t\t\t\t}\n\t\t\t\tlist.push(\n\t\t\t\t\t<DialogContainer\n\t\t\t\t\t\tname={element}\n\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\tcheck={check}\n\t\t\t\t\t\tkey={list.length}\n\t\t\t\t\t\tredirect={(name) => props.redirect(name)}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t});\n\t\t\tsetChats(list);\n\t\t}\n\t}, []);\n\n\tconst addToggle = () => {\n\t\tsetAdd(!toggleAdd);\n\t};\n\n\tfunction AddInput(props) {\n\t\tconst [value, setValue] = useState('');\n\n\t\tconst HandleSubmit = (event, value) => {\n\t\t\tevent.preventDefault();\n\t\t\tif (value !== '') {\n\t\t\t\tlet data = JSON.parse(localStorage.getItem('users'));\n\t\t\t\tsetChats([\n\t\t\t\t\t...chats,\n\t\t\t\t\t<DialogContainer\n\t\t\t\t\t\tname={value}\n\t\t\t\t\t\tkey={data.length}\n\t\t\t\t\t\tredirect={(name) => props.redirect(name)}\n\t\t\t\t\t/>,\n\t\t\t\t]);\n\t\t\t\tdata.push(value);\n\t\t\t\tlocalStorage.setItem('users', JSON.stringify(data));\n\t\t\t\tlocalStorage.setItem(value, JSON.stringify([]));\n\t\t\t}\n\t\t};\n\n\t\tconst HandleChange = (event) => {\n\t\t\tsetValue(event.target.value);\n\t\t};\n\n\t\treturn (\n\t\t\t<form onSubmit={(event) => HandleSubmit(event, value.trim())}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.add_input}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={(event) => HandleChange(event)}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className={styles.dialog_form}>\n\t\t\t<div className={styles.dialog_header}>\n\t\t\t\t<div>&#9776;</div>\n\t\t\t\t<div className={styles.header_text}>Messenger</div>\n\t\t\t\t<div>&#128270;</div>\n\t\t\t</div>\n\t\t\t<div className={styles.chat_list}>{chats}</div>\n\t\t\t<button className={styles.add_button} onClick={() => addToggle()}>\n\t\t\t\t&#9998;\n\t\t\t</button>\n\t\t\t{toggleAdd ? (\n\t\t\t\t<AddInput redirect={(name) => props.redirect(name)} />\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nfunction DialogContainer(props) {\n\treturn (\n\t\t<div\n\t\t\tclassName={styles.dialog_container}\n\t\t\tonClick={() => props.redirect(props.name)}\n\t\t>\n\t\t\t<div className={styles.dialog_avatar}>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://icon-library.net//images/free-profile-icon/free-profile-icon-4.jpg\"\n\t\t\t\t\tclassName={styles.avatar_img}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className={styles.dialog_name}>{props.name}</div>\n\t\t\t\t<div className={styles.dialog_message}>{props.message}</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className={styles.dialog_date}>{props.date}</div>\n\t\t\t\t{props.check ? (\n\t\t\t\t\t<div className={styles.dialog_check}>&#10004;</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Dialogs;\n","import React, { useState, useEffect, useRef } from 'react';\nimport styles from '../styles/message-form.module.css';\n\nfunction Chat(props) {\n\tconst [messages, setMessages] = useState([]);\n\tconst myRef = useRef(null);\n\t\n\tconst scrollToBottom = () => {\n\t\tmyRef.current.scrollIntoView({block: 'end'});\n\t}\n\n\tuseEffect(scrollToBottom, [messages]);\n\n\tuseEffect(() => {\n\t\tlet list = [];\n\t\tJSON.parse(localStorage.getItem(props.name)).map((element) => {\n\t\t\tlist.push(\n\t\t\t\t<div key={list.length} className={styles.message_container}>\n\t\t\t\t\t<div>{element[0]}</div>\n\t\t\t\t\t<div>{element[1]}</div>\n\t\t\t\t</div>,\n\t\t\t);\n\t\t});\n\t\tsetMessages(list);\n\t}, []);\n\n\tfunction MessageInput(props) {\n\t\tconst [current_message, setCurrentMessage] = useState('');\n\t\tconst input = useRef(null);\n\n\t\tconst handleChange = (event) => {\n\t\t\tsetCurrentMessage(event.target.value);\n\t\t};\n\n\t\tconst inputFocus = () => {\n\t\t\tinput.current.focus();\n\t\t}\n\n\t\tuseEffect(inputFocus, [input]);\n\n\t\tconst sendMessage = (event, value) => {\n\t\t\tevent.preventDefault();\n\t\t\tif (value !== '') {\n\t\t\t\tconst date = new Date();\n\t\t\t\tconst data = JSON.parse(localStorage.getItem(props.name));\n\t\t\t\tlet minutes = date.getMinutes().toString();\n\t\t\t\tif (minutes.length === 1) {\n\t\t\t\t\tminutes = '0' + minutes;\n\t\t\t\t}\n\t\t\t\tlet hours = date.getHours();\n\t\t\t\tif (hours.length === 1) {\n\t\t\t\t\thours = '0' + hours;\n\t\t\t\t}\n\t\t\t\tsetMessages([\n\t\t\t\t\t...messages,\n\t\t\t\t\t<div className={styles.message_container} key={data.length}>\n\t\t\t\t\t\t<div>{value}</div>\n\t\t\t\t\t\t<div>{hours + ':' + minutes}</div>\n\t\t\t\t\t</div>,\n\t\t\t\t]);\n\n\t\t\t\tdata.push([value, hours + ':' + minutes]);\n\t\t\t\tlocalStorage.setItem(props.name, JSON.stringify(data));\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<form onSubmit={(event) => sendMessage(event, current_message.trim())}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={(event) => handleChange(event)}\n\t\t\t\t\tclassName={styles.message_input}\n\t\t\t\t\tref={input}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className={styles.wrapper}>\n\t\t\t<div className={styles.chat_header}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={styles.chat_exit_button}\n\t\t\t\t\tonClick={() => props.redirect()}\n\t\t\t\t>\n\t\t\t\t\t&#8678;\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.chat_name}>{props.name}</div>\n\t\t\t</div>\n\t\t\t<div className={styles.messages_list} ref={myRef}>{messages}</div>\n\t\t\t<MessageInput name={props.name} />\n\t\t</div>\n\t);\n}\n\nexport default Chat\n","import React, { useState, useEffect } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport styled from '@emotion/styled';\nimport Dialogs from '../components/Dialogs';\nimport Chat from '../components/Chat';\n\nconst Container = styled.div`\n\tbackground-color: rgb(20, 20, 20);\n\theight: 100vh;\n\toverflow: auto;\n`;\nexport const history = createBrowserHistory();\n\nfunction Routes(props) {\n\tconst [component, setComponent] = useState(\n\t\t<Dialogs redirect={(name) => enterChat(name)} />,\n\t);\n\n\tconst enterChat = (name) => {\n\t\tsetComponent(<Chat redirect={() => exitChat()} name={name} />);\n\t};\n\n\tconst exitChat = () => {\n\t\tsetComponent(<Dialogs redirect={(name) => enterChat(name)} />);\n\t};\n\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<Container>\n\t\t\t\t<Switch>\n\t\t\t\t\t{component}\n\t\t\t\t</Switch>\n\t\t\t</Container>\n\t\t</Router>\n\t);\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n/* eslint no-console: 0 */\n/* eslint no-param-reassign: 0 */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Routes from './routes';\nimport './styles/globalStyles.css';\nimport * as serviceWorker from './utils/serviceWorker';\n\nrender(\n\t<Provider store={store}>\n\t\t<Routes />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n\t// Counter\n\tINCREMENT_COUNTER: 'INCREMENT_COUNTER',\n\tDECREMENT_COUNTER: 'DECREMENT_COUNTER',\n};\n","import ActionTypes from '../constants/ActionTypes';\n\nconst initialState = 0;\n\nexport default function counter(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase ActionTypes.INCREMENT_COUNTER:\n\t\t\treturn state + 1;\n\t\tcase ActionTypes.DECREMENT_COUNTER:\n\t\t\treturn state - 1;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from 'redux';\nimport counter from './counter';\n\nconst rootReducer = combineReducers({\n\tcounter,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst middlewares = [ReduxThunk];\nconst enhancer = [applyMiddleware(...middlewares)];\n\nexport default function configureStore(initialState = {}) {\n\treturn createStore(rootReducer, initialState, ...enhancer);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages_list\":\"message-form_messages_list__OOCNx\",\"chat_header\":\"message-form_chat_header__3a1yp\",\"chat_name\":\"message-form_chat_name__2ryTi\",\"chat_exit_button\":\"message-form_chat_exit_button__3OyEC\",\"message_container\":\"message-form_message_container__1mEIN\",\"message_input\":\"message-form_message_input__14lGL\"};"],"sourceRoot":""}